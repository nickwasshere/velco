aW1wb3J0IHJlcXVlc3RzDQppbXBvcnQgb3MNCmltcG9ydCBzaHV0aWwNCmltcG9ydCBqc29uDQppbXBvcnQgYmFzZTY0DQppbXBvcnQgd2luMzJjcnlwdA0KZnJvbSBDcnlwdG8uQ2lwaGVyIGltcG9ydCBBRVMNCmltcG9ydCBwbGF0Zm9ybQ0KaW1wb3J0IHRpbWUNCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lDQppbXBvcnQgemlwZmlsZQ0KaW1wb3J0IGJpbmFzY2lpDQoNCmNsYXNzIENyeXB0b1V0aWxzOg0KICAgIEBzdGF0aWNtZXRob2QNCiAgICBkZWYgZ2V0X21hc3Rlcl9rZXkoYnJvd3Nlcl9wYXRoKToNCiAgICAgICAgbG9jYWxfc3RhdGVfcGF0aCA9IG9zLnBhdGguam9pbihvcy5wYXRoLmRpcm5hbWUoYnJvd3Nlcl9wYXRoKSwgJ0xvY2FsIFN0YXRlJykNCiAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKGxvY2FsX3N0YXRlX3BhdGgpOg0KICAgICAgICAgICAgcmV0dXJuIE5vbmUsICJMb2NhbCBTdGF0ZSBmaWxlIG5vdCBmb3VuZCINCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgd2l0aCBvcGVuKGxvY2FsX3N0YXRlX3BhdGgsICJyIiwgZW5jb2Rpbmc9InV0Zi04IikgYXMgZjoNCiAgICAgICAgICAgICAgICBsb2NhbF9zdGF0ZSA9IGpzb24ubG9hZHMoZi5yZWFkKCkpDQogICAgICAgICAgICBlbmNyeXB0ZWRfa2V5ID0gYmFzZTY0LmI2NGRlY29kZShsb2NhbF9zdGF0ZVsib3NfY3J5cHQiXVsiZW5jcnlwdGVkX2tleSJdKQ0KICAgICAgICAgICAgZW5jcnlwdGVkX2tleSA9IGVuY3J5cHRlZF9rZXlbNTpdICAjIFJlbW92ZSAnRFBBUEknIHByZWZpeA0KICAgICAgICAgICAgbWFzdGVyX2tleSA9IHdpbjMyY3J5cHQuQ3J5cHRVbnByb3RlY3REYXRhKGVuY3J5cHRlZF9rZXksIE5vbmUsIE5vbmUsIE5vbmUsIDApWzFdDQogICAgICAgICAgICByZXR1cm4gbWFzdGVyX2tleSwgTm9uZQ0KICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgICAgICAgICByZXR1cm4gTm9uZSwgZiJGYWlsZWQgdG8gcmV0cmlldmUgbWFzdGVyIGtleToge3N0cihlKX0iDQoNCiAgICBAc3RhdGljbWV0aG9kDQogICAgZGVmIGRlY3J5cHRfZGF0YShidWZmLCBtYXN0ZXJfa2V5KToNCiAgICAgICAgaWYgbm90IGJ1ZmY6DQogICAgICAgICAgICByZXR1cm4gIkVtcHR5IGRhdGEiLCAiTm8gZGF0YSBwcm92aWRlZCINCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgaWYgaXNpbnN0YW5jZShidWZmLCBieXRlcykgYW5kIGxlbihidWZmKSA
